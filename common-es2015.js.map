{"version":3,"sources":["/../components/block-ui/src/block-ui.component.ts.PsBlockUiComponent.html","/../components/block-ui/src/block-ui.component.ts","/../components/block-ui/src/block-ui.module.ts","/../components/flip-container/src/flip-container.component.html","/../components/flip-container/src/flip-container.component.ts","/../components/flip-container/src/flip-container.directives.ts","/../components/flip-container/src/flip-container.module.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["\n    <div #content class=\"ps-block-ui__content\">\n      <ng-content></ng-content>\n    </div>\n    <ng-container *ngIf=\"blocked\">\n      <div class=\"ps-block-ui__overlay\">\n        <div class=\"ps-block-ui__overlay-content\">\n          <mat-spinner class=\"ps-block-ui__spinner\" [diameter]=\"spinnerDiameter\"></mat-spinner>\n          <div *ngIf=\"spinnerText\">{{ spinnerText }}</div>\n        </div>\n      </div>\n    </ng-container>\n  ","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ps-block-ui',\r\n  template: `\r\n    <div #content class=\"ps-block-ui__content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n    <ng-container *ngIf=\"blocked\">\r\n      <div class=\"ps-block-ui__overlay\">\r\n        <div class=\"ps-block-ui__overlay-content\">\r\n          <mat-spinner class=\"ps-block-ui__spinner\" [diameter]=\"spinnerDiameter\"></mat-spinner>\r\n          <div *ngIf=\"spinnerText\">{{ spinnerText }}</div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  styles: [\r\n    `\r\n      ps-block-ui {\r\n        display: grid;\r\n        position: relative;\r\n      }\r\n\r\n      .ps-block-ui__content {\r\n        grid-column: 1;\r\n        grid-row: 1;\r\n      }\r\n\r\n      .ps-block-ui__overlay {\r\n        grid-column: 1;\r\n        grid-row: 1;\r\n        z-index: 2;\r\n        background-color: rgba(244, 244, 244, 0.6);\r\n\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n\r\n      .ps-block-ui__spinner {\r\n        display: inline-block;\r\n        margin: auto;\r\n        color: var(--ps-primary);\r\n        opacity: 1;\r\n      }\r\n\r\n      .ps-block-ui__overlay-content {\r\n        text-align: center;\r\n\r\n        position: sticky;\r\n        top: 10%;\r\n        bottom: 10%;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PsBlockUiComponent implements OnChanges, AfterViewInit {\r\n  @Input() public blocked: boolean;\r\n  @Input() public spinnerText: string;\r\n\r\n  public spinnerDiameter = 100;\r\n\r\n  @ViewChild('content', { static: true }) public contentNode: ElementRef<HTMLElement>;\r\n\r\n  public ngOnChanges() {\r\n    if (this.blocked) {\r\n      this.updateSpinner();\r\n    }\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    this.updateSpinner();\r\n  }\r\n\r\n  private updateSpinner() {\r\n    const nativeEl = this.contentNode.nativeElement;\r\n    const minDimension = Math.min(nativeEl.offsetWidth, nativeEl.offsetHeight);\r\n    const textSpace = this.spinnerText ? 20 : 0;\r\n    this.spinnerDiameter = Math.max(Math.min(minDimension - textSpace, 100), 10);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { PsBlockUiComponent } from './block-ui.component';\r\n\r\n@NgModule({\r\n  declarations: [PsBlockUiComponent],\r\n  imports: [CommonModule, MatProgressSpinnerModule],\r\n  exports: [PsBlockUiComponent],\r\n})\r\nexport class PsBlockUiModule {}\r\n","<div class=\"ps-flip-container__container\">\r\n  <div class=\"ps-flip-container__flip-box\" [@flipState]=\"show\" (@flipState.start)=\"flipStarted()\" (@flipState.done)=\"flipDone()\">\r\n    <div #frontside class=\"ps-flip-container__side ps-flip-container__side__front\">\r\n      <ng-container *ngIf=\"attachFront || !removeHiddenNodes\" [ngTemplateOutlet]=\"frontTemplate\"></ng-container>\r\n    </div>\r\n    <div #backside class=\"ps-flip-container__side ps-flip-container__side__back\">\r\n      <ng-container *ngIf=\"attachBack || !removeHiddenNodes\" [ngTemplateOutlet]=\"backTemplate\"></ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  Input,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FlipContainerBackDirective, FlipContainerFrontDirective } from './flip-container.directives';\r\n\r\n@Component({\r\n  selector: 'ps-flip-container',\r\n  templateUrl: './flip-container.component.html',\r\n  styleUrls: ['./flip-container.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('flipState', [\r\n      state(\r\n        'back',\r\n        style({\r\n          transform: 'rotateY(180deg)',\r\n        })\r\n      ),\r\n      state(\r\n        'front',\r\n        style({\r\n          transform: 'rotateY(0)',\r\n        })\r\n      ),\r\n      transition('back => front', animate('300ms ease-out')),\r\n      transition('front => back', animate('300ms ease-in')),\r\n    ]),\r\n  ],\r\n})\r\nexport class PsFlipContainerComponent implements AfterViewInit {\r\n  @Input() public removeHiddenNodes = true;\r\n\r\n  @ContentChild(FlipContainerFrontDirective, { read: TemplateRef, static: false })\r\n  public frontTemplate: TemplateRef<any> | null = null;\r\n\r\n  @ContentChild(FlipContainerBackDirective, { read: TemplateRef, static: false })\r\n  public backTemplate: TemplateRef<any> | null = null;\r\n\r\n  @ViewChild('frontside', { static: true }) public frontside: ElementRef<any>;\r\n  @ViewChild('backside', { static: true }) public backside: ElementRef<any>;\r\n\r\n  public show: 'back' | 'front' = 'front';\r\n  public attachFront = true;\r\n  public attachBack = false;\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  public ngAfterViewInit() {\r\n    this.backside.nativeElement.hidden = true;\r\n  }\r\n\r\n  public toggleFlip() {\r\n    this.show = this.show === 'front' ? 'back' : 'front';\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  public flipStarted() {\r\n    if (this.show === 'back') {\r\n      this.backside.nativeElement.hidden = false;\r\n      this.attachBack = true;\r\n    } else {\r\n      this.frontside.nativeElement.hidden = false;\r\n      this.attachFront = true;\r\n    }\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  public flipDone() {\r\n    if (this.show === 'back') {\r\n      this.frontside.nativeElement.hidden = true;\r\n      this.attachFront = false;\r\n    } else {\r\n      this.backside.nativeElement.hidden = true;\r\n      this.attachBack = false;\r\n    }\r\n    this.cd.markForCheck();\r\n  }\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[psFlipContainerFront]',\r\n})\r\nexport class FlipContainerFrontDirective {\r\n  constructor(public el: ElementRef) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[psFlipContainerBack]',\r\n})\r\nexport class FlipContainerBackDirective {\r\n  constructor(public el: ElementRef) {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { PsFlipContainerComponent } from './flip-container.component';\r\nimport { FlipContainerBackDirective, FlipContainerFrontDirective } from './flip-container.directives';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PsFlipContainerComponent, FlipContainerFrontDirective, FlipContainerBackDirective],\r\n  exports: [PsFlipContainerComponent, FlipContainerFrontDirective, FlipContainerBackDirective],\r\n})\r\nexport class PsFlipContainerModule {}\r\n"],"sourceRoot":""}