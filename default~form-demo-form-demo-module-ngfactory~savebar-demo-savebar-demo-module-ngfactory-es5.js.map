{"version":3,"sources":["/../components/core/index.ts","/../components/core/public_api.ts","/../components/core/src/exception-message-extractor.service.ts","/../components/savebar/src/savebar-right-content.directive.ts","/../components/savebar/src/savebar.component.html","/../components/savebar/src/savebar.component.ts","/../components/savebar/src/savebar.module.ts"],"names":[],"mappings":"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","file":"default~form-demo-form-demo-module-ngfactory~savebar-demo-savebar-demo-module-ngfactory-es5.js","sourcesContent":["// export what ./public_api exports so we can import with the lib name like this:\r\n// import { ModuleA } from 'libname'\r\nexport * from './public_api';\r\n","export { PsExceptionMessageExtractor } from './src/exception-message-extractor.service';\nexport { IPsFormIntlTexts, IPsSavebarIntlTexts, IPsTableIntlTexts, PsIntlKeys, PsIntlService, PsIntlServiceEn } from './src/intl';\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PsExceptionMessageExtractor {\r\n  /**\r\n   * Extracts a error message from a given error object\r\n   * @param error The error object.\r\n   * @returns The error message\r\n   */\r\n  public extractErrorMessage(error: any): string {\r\n    if (!error) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof error === 'string') {\r\n      return error;\r\n    }\r\n\r\n    return error.message;\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[psSavebarRightContent]',\r\n})\r\nexport class PsSavebarRightContentDirective {}\r\n","<div class=\"ps-savebar__main-container\">\r\n  <ng-content></ng-content>\r\n  <mat-card *ngIf=\"!isHidden\" [class.ps-savebar__card--sticky]=\"isSticky\" class=\"ps-savebar__card mat-elevation-z2\">\r\n    <div class=\"ps-savebar__container\">\r\n      <ps-form-errors *ngIf=\"form\" [form]=\"form\"></ps-form-errors>\r\n      <div *ngIf=\"!form\" class=\"ps-savebar__container-spacer\"></div>\r\n      <div class=\"ps-savebar__container-spacer\"></div>\r\n\r\n      <button\r\n        *ngIf=\"hasObservers(save)\"\r\n        mat-raised-button\r\n        type=\"button\"\r\n        color=\"primary\"\r\n        class=\"ps-savebar__button__save\"\r\n        [disabled]=\"saveDisabled\"\r\n        (click)=\"save.emit()\"\r\n      >\r\n        {{ intl?.saveLabel }}\r\n      </button>\r\n      <button\r\n        *ngIf=\"hasObservers(saveAndClose)\"\r\n        mat-raised-button\r\n        type=\"button\"\r\n        color=\"primary\"\r\n        class=\"ps-savebar__button__save-and-close\"\r\n        [disabled]=\"saveDisabled\"\r\n        (click)=\"saveAndClose.emit()\"\r\n      >\r\n        {{ intl?.saveAndCloseLabel }}\r\n      </button>\r\n\r\n      <ng-container *ngIf=\"customRightContent\" [ngTemplateOutlet]=\"customRightContent\"></ng-container>\r\n\r\n      <button\r\n        *ngIf=\"hasObservers(step)\"\r\n        mat-stroked-button\r\n        type=\"button\"\r\n        class=\"ps-savebar__button__prev\"\r\n        (click)=\"step.emit(-1)\"\r\n        [disabled]=\"!canStepBack\"\r\n      >\r\n        {{ intl?.prevLabel }}\r\n      </button>\r\n      <button\r\n        *ngIf=\"hasObservers(step)\"\r\n        mat-raised-button\r\n        type=\"button\"\r\n        color=\"primary\"\r\n        class=\"ps-savebar__button__next\"\r\n        (click)=\"step.emit(1)\"\r\n        [disabled]=\"!canStepFwd\"\r\n      >\r\n        {{ intl?.nextLabel }}\r\n      </button>\r\n\r\n      <button *ngIf=\"hasObservers(cancel)\" mat-stroked-button type=\"button\" class=\"ps-savebar__button__cancel\" (click)=\"cancel.emit()\">\r\n        {{ intl?.cancelLabel }}\r\n      </button>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { IPsSavebarIntlTexts, PsIntlService } from '@prosoft/components/core';\r\nimport { merge, Subject, Subscription } from 'rxjs';\r\nimport { startWith, takeUntil } from 'rxjs/operators';\r\nimport { IPsSavebarMode } from './models';\r\nimport { PsSavebarRightContentDirective } from './savebar-right-content.directive';\r\n\r\n@Component({\r\n  selector: 'ps-savebar',\r\n  templateUrl: './savebar.component.html',\r\n  styleUrls: ['./savebar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PsSavebarComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() public mode: IPsSavebarMode = 'auto';\r\n  @Input() public form: FormGroup;\r\n  @Input() public canSave: boolean | null;\r\n  @Input() public canStepFwd: boolean;\r\n  @Input() public canStepBack: boolean;\r\n  @Input() public intlOverride: Partial<IPsSavebarIntlTexts>;\r\n  @Input() public saveKey = 's';\r\n\r\n  @Output() public save = new EventEmitter<void>();\r\n  @Output() public saveAndClose = new EventEmitter<void>();\r\n  @Output() public step = new EventEmitter<number>();\r\n  @Output() public cancel = new EventEmitter<void>();\r\n\r\n  @ContentChild(PsSavebarRightContentDirective, { read: TemplateRef, static: false })\r\n  public customRightContent: TemplateRef<any> | null;\r\n\r\n  public get isHidden(): boolean {\r\n    return this.mode === 'hide';\r\n  }\r\n\r\n  public get isSticky(): boolean {\r\n    if (this.mode && this.mode !== 'auto') {\r\n      return this.mode === 'sticky';\r\n    }\r\n    if (this.form) {\r\n      return this.form.dirty || this.form.touched;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public get saveDisabled(): boolean {\r\n    if (typeof this.canSave === 'boolean') {\r\n      return !this.canSave;\r\n    }\r\n    if (this.form) {\r\n      return this.form.pristine || this.form.invalid;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public intl: IPsSavebarIntlTexts;\r\n\r\n  private ngUnsubscribe$ = new Subject<void>();\r\n  private _formSub: Subscription;\r\n  private _stopListening: () => void;\r\n\r\n  constructor(private intlService: PsIntlService, private renderer: Renderer2, private ngZone: NgZone, public cd: ChangeDetectorRef) {}\r\n\r\n  public ngOnInit() {\r\n    this.intlService.intlChanged$\r\n      .pipe(\r\n        startWith(null as any),\r\n        takeUntil(this.ngUnsubscribe$)\r\n      )\r\n      .subscribe(() => {\r\n        this.updateIntl();\r\n        this.cd.markForCheck();\r\n      });\r\n\r\n    this.updateSaveKeyListener();\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.intlOverride) {\r\n      this.updateIntl();\r\n    }\r\n\r\n    if (changes.form) {\r\n      if (this._formSub) {\r\n        this._formSub.unsubscribe();\r\n      }\r\n\r\n      if (this.form) {\r\n        // Die Werte für isSticky und saveDisabled können hier nicht direkt berechnet und gespeichert werden,\r\n        // weil ValueChanges/statusChanges teils läuft, bevor die dirty, etc. Werte an der FormGroup richtig sind.\r\n        // Über markForCheck() funktioniert es, weil die ChangeDetection nicht sofort läuft und die Werte stimmen, sobald sie dann läuft.\r\n        // Wenn es ein Event für dirty/pristine und touched/untouched gäbe, könnte man es umbauen: https://github.com/angular/angular/issues/10887\r\n        this._formSub = merge(this.form.valueChanges, this.form.statusChanges).subscribe(() => {\r\n          this.cd.markForCheck();\r\n        });\r\n      }\r\n    }\r\n\r\n    if (changes.saveKey) {\r\n      this.updateSaveKeyListener();\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.ngUnsubscribe$.next();\r\n    this.ngUnsubscribe$.complete();\r\n\r\n    if (this._stopListening) {\r\n      this._stopListening();\r\n    }\r\n    if (this._formSub) {\r\n      this._formSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public hasObservers(emitter: EventEmitter<any>) {\r\n    return emitter && !!emitter.observers.length;\r\n  }\r\n\r\n  private updateIntl() {\r\n    const intl = this.intlService.get('savebar');\r\n    this.intl = this.intlService.merge(intl, this.intlOverride);\r\n  }\r\n\r\n  private updateSaveKeyListener() {\r\n    if (this._stopListening) {\r\n      this._stopListening();\r\n    }\r\n\r\n    if (this.saveKey) {\r\n      this.ngZone.runOutsideAngular(() => {\r\n        this._stopListening = this.renderer.listen('document', 'keydown', this.onKeydown.bind(this));\r\n      });\r\n    }\r\n  }\r\n\r\n  private onKeydown(event: KeyboardEvent) {\r\n    if (event.ctrlKey && event.key === this.saveKey && !this.saveDisabled) {\r\n      if (this.hasObservers(this.save)) {\r\n        event.preventDefault();\r\n        this.ngZone.run(() => this.save.emit());\r\n      } else if (this.hasObservers(this.saveAndClose)) {\r\n        event.preventDefault();\r\n        this.ngZone.run(() => this.saveAndClose.emit());\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { PsFormErrorsModule } from '@prosoft/components/form-errors';\r\nimport { PsSavebarRightContentDirective } from './savebar-right-content.directive';\r\nimport { PsSavebarComponent } from './savebar.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatCardModule, MatButtonModule, PsFormErrorsModule],\r\n  declarations: [PsSavebarComponent, PsSavebarRightContentDirective],\r\n  exports: [PsSavebarComponent, PsSavebarRightContentDirective],\r\n})\r\nexport class PsSavebarModule {}\r\n"],"sourceRoot":""}