{"version":3,"sources":["/../components/form/index.ts","/../components/form/public_api.ts","/../components/form/src/form-action.service.ts","/../components/form/src/form.component.html","/../components/form/src/form.component.ts","/../components/form/src/form.module.ts","/../components/savebar/index.ts","/../components/savebar/public_api.ts","/./src/app/form-demo/form-data-source-demo.component.ts.FormDataSourceDemoComponent.html","/./src/app/form-demo/form-data-source-demo.component.ts","/./src/app/form-demo/form-demo.component.ts.FormDemoComponent.html","/./src/app/form-demo/form-demo.component.ts","/./src/app/form-demo/form-demo.module.ts","/./src/app/form-demo/form-inputs-demo.component.ts.FormInputsDemoComponent.html","/./src/app/form-demo/form-inputs-demo.component.ts"],"names":[],"mappings":"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","file":"form-demo-form-demo-module-ngfactory-es5.js","sourcesContent":["// export what ./public_api exports so we can import with the lib name like this:\r\n// import { ModuleA } from 'libname'\r\nexport * from './public_api';\r\n","export { PsFormActionService } from './src/form-action.service';\nexport {\n  PsFormCancelEvent,\n  PsFormComponent,\n  PsFormEvent,\n  PsFormLoadErrorEvent,\n  PsFormLoadSuccessEvent,\n  PsFormSaveErrorEvent,\n  PsFormSaveSuccessEvent,\n} from './src/form.component';\nexport { PsFormModule } from './src/form.module';\nexport {\n  IPsFormCancelParams,\n  IPsFormLoadErrorParams,\n  IPsFormLoadSuccessParams,\n  IPsFormSaveErrorParams,\n  IPsFormSaveParams,\n  IPsFormSaveSuccessParams,\n} from './src/models';\nexport { IPsFormDataSource, IPsFormButton, IPsFormException } from './src/form-data-source';\n\n// reexport\nexport { IPsFormIntlTexts } from '@prosoft/components/core';\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  IPsFormCancelParams,\r\n  IPsFormLoadErrorParams,\r\n  IPsFormLoadSuccessParams,\r\n  IPsFormSaveErrorParams,\r\n  IPsFormSaveSuccessParams,\r\n} from './models';\r\n\r\n/** @deprecated */\r\n@Injectable()\r\nexport abstract class PsFormActionService {\r\n  public abstract defaultCancelHandler(params: IPsFormCancelParams): void;\r\n\r\n  public abstract defaultLoadSuccessHandler(params: IPsFormLoadSuccessParams): void;\r\n  public abstract defaultLoadErrorHandler(params: IPsFormLoadErrorParams): void;\r\n\r\n  public abstract defaultSaveSuccessHandler(params: IPsFormSaveSuccessParams): void;\r\n  public abstract defaultSaveErrorHandler(params: IPsFormSaveErrorParams): void;\r\n}\r\n","<ng-template #content><ng-content></ng-content></ng-template>\r\n\r\n<form [formGroup]=\"boundForm\" [autocomplete]=\"autocomplete\">\r\n  <ps-savebar\r\n    *ngIf=\"!dataSource\"\r\n    [form]=\"boundForm\"\r\n    [mode]=\"savebarMode\"\r\n    (cancel)=\"onCancel()\"\r\n    [canSave]=\"canSaveIntern\"\r\n    [intlOverride]=\"intlOverride\"\r\n  >\r\n    <div class=\"ps-form__cards-container\">\r\n      <ps-block-ui *ngIf=\"!hasLoadError\" [blocked]=\"viewBlocked\">\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </ps-block-ui>\r\n\r\n      <mat-card *ngIf=\"hasLoadError\" class=\"ps-form__error-container ps-form__error-container--center\">\r\n        <mat-icon class=\"ps-form__error-icon\">sentiment_very_dissatisfied</mat-icon>\r\n        <span>{{ errorMessage }}</span>\r\n      </mat-card>\r\n\r\n      <mat-card *ngIf=\"hasSaveError\" class=\"ps-form__error-container\">\r\n        <span>{{ errorMessage }}</span>\r\n      </mat-card>\r\n\r\n      <mat-card *ngIf=\"hasLoadError\" class=\"ps-form__error-actions\">\r\n        <button mat-stroked-button type=\"button\" (click)=\"onCancel()\">\r\n          {{ intl.cancelLabel }}\r\n        </button>\r\n      </mat-card>\r\n    </div>\r\n  </ps-savebar>\r\n\r\n  <ps-savebar *ngIf=\"dataSource\" [form]=\"boundForm\" [mode]=\"savebarMode\">\r\n    <div class=\"ps-form__cards-container\">\r\n      <ps-block-ui *ngIf=\"contentVisible\" [blocked]=\"contentBlocked\">\r\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n      </ps-block-ui>\r\n\r\n      <mat-card *ngIf=\"exception\" class=\"ps-form__error-container\" [class.ps-form__error-container--center]=\"exception.alignCenter\">\r\n        <mat-icon *ngIf=\"exception.icon\" class=\"ps-form__error-icon\">{{ exception.icon }}</mat-icon>\r\n        <span>{{ exceptionMessage }}</span>\r\n      </mat-card>\r\n    </div>\r\n    <div *psSavebarRightContent class=\"ps-form__buttons\">\r\n      <ng-content select=\"[psFormSavebarButtons]\"></ng-content>\r\n      <button\r\n        *ngFor=\"let btn of buttons\"\r\n        mat-button\r\n        [class.mat-raised-button]=\"btn.type === 'raised'\"\r\n        [class.mat-stroked-button]=\"btn.type === 'stroked'\"\r\n        type=\"button\"\r\n        [color]=\"btn.color\"\r\n        [disabled]=\"btn.disabled()\"\r\n        (click)=\"btn.click()\"\r\n      >\r\n        {{ btn.label }}\r\n      </button>\r\n    </div>\r\n  </ps-savebar>\r\n</form>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IPsFormIntlTexts, PsExceptionMessageExtractor, PsIntlService } from '@prosoft/components/core';\r\nimport { PsSavebarComponent } from '@prosoft/components/savebar';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { startWith, takeUntil } from 'rxjs/operators';\r\nimport { PsFormActionService } from './form-action.service';\r\nimport { IPsFormButton, IPsFormDataSource, IPsFormException } from './form-data-source';\r\nimport { IPsFormSaveParams } from './models';\r\n\r\n/** @deprecated */\r\nexport class PsFormEvent {\r\n  public defaultPrevented = false;\r\n\r\n  public preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/** @deprecated */\r\nexport class PsFormLoadSuccessEvent extends PsFormEvent {\r\n  constructor(public readonly value: any) {\r\n    super();\r\n  }\r\n}\r\n/** @deprecated */\r\nexport class PsFormLoadErrorEvent extends PsFormEvent {\r\n  constructor(public readonly error: any) {\r\n    super();\r\n  }\r\n}\r\n\r\n/** @deprecated */\r\nexport class PsFormSaveSuccessEvent extends PsFormEvent {\r\n  constructor(public readonly value: any, public readonly saveResponse: any, public readonly close: boolean) {\r\n    super();\r\n  }\r\n}\r\n/** @deprecated */\r\nexport class PsFormSaveErrorEvent extends PsFormEvent {\r\n  constructor(public readonly value: any, public readonly error: any) {\r\n    super();\r\n  }\r\n}\r\n\r\n/** @deprecated */\r\nexport class PsFormCancelEvent extends PsFormEvent {}\r\n\r\n@Component({\r\n  selector: 'ps-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PsFormComponent implements OnChanges, OnInit, OnDestroy {\r\n  @Input() public set dataSource(value: IPsFormDataSource) {\r\n    if (this._dataSource) {\r\n      this._dataSource.disconnect();\r\n      this._dataSourceSub.unsubscribe();\r\n    }\r\n\r\n    this._dataSource = value;\r\n\r\n    if (this._dataSource) {\r\n      this._dataSourceSub = this._dataSource.connect().subscribe(() => {\r\n        this.cd.markForCheck();\r\n      });\r\n    }\r\n  }\r\n  public get dataSource(): IPsFormDataSource {\r\n    return this._dataSource;\r\n  }\r\n  private _dataSource: IPsFormDataSource;\r\n\r\n  public get boundForm(): FormGroup {\r\n    if (this.dataSource) {\r\n      return this.dataSource.form;\r\n    }\r\n    return this.form || this.dummyForm;\r\n  }\r\n  public get buttons(): IPsFormButton[] {\r\n    return this.dataSource.buttons;\r\n  }\r\n  public get savebarMode(): string {\r\n    if (this.dataSource) {\r\n      return this.dataSource.savebarMode;\r\n    }\r\n    return this.hasLoadError ? 'hide' : 'auto';\r\n  }\r\n  public get contentVisible(): boolean {\r\n    return this.dataSource.contentVisible;\r\n  }\r\n  public get contentBlocked(): boolean {\r\n    return this.dataSource.contentBlocked;\r\n  }\r\n  public get exception(): IPsFormException {\r\n    return this.dataSource.exception;\r\n  }\r\n  public get exceptionMessage(): string {\r\n    // TODO: pipe\r\n    return this.dataSource.exception ? this.errorExtractor.extractErrorMessage(this.dataSource.exception.errorObject) : '';\r\n  }\r\n\r\n  /** @deprecated */\r\n  @Input() public form: FormGroup | null;\r\n  /** @deprecated */\r\n  @Input() public formMode: 'create' | 'update';\r\n  /** @deprecated */\r\n  @Input() public autocomplete: 'on' | 'off' = 'off';\r\n  /** @deprecated */\r\n  @Input() public hideSaveAndClose = false;\r\n  /** @deprecated */\r\n  @Input() public hideSave = false;\r\n  /** @deprecated */\r\n  @Input() public blocked = false;\r\n  /** @deprecated */\r\n  @Input() public canSave: boolean | null = null;\r\n  /** @deprecated */\r\n  @Input() public intlOverride: Partial<IPsFormIntlTexts>;\r\n\r\n  /** @deprecated */\r\n  @Input() public loadFnc: () => Observable<any>;\r\n  /** @deprecated */\r\n  @Input() public saveFnc: (formRawValue: any, params: IPsFormSaveParams) => Observable<any>;\r\n\r\n  /** @deprecated */\r\n  @Output() public loadSuccess = new EventEmitter<PsFormLoadSuccessEvent>();\r\n  /** @deprecated */\r\n  @Output() public loadError = new EventEmitter<PsFormLoadErrorEvent>();\r\n  /** @deprecated */\r\n  @Output() public saveSuccess = new EventEmitter<PsFormSaveSuccessEvent>();\r\n  /** @deprecated */\r\n  @Output() public saveError = new EventEmitter<PsFormSaveErrorEvent>();\r\n  /** @deprecated */\r\n  @Output() public cancel = new EventEmitter<PsFormCancelEvent>();\r\n\r\n  @ViewChild(PsSavebarComponent, { static: false }) public set savebar(value: PsSavebarComponent) {\r\n    if (value) {\r\n      this._savebar = value;\r\n      this.updateSaveBinding();\r\n      this.updateSaveAndCloseBinding();\r\n    }\r\n  }\r\n\r\n  /** @deprecated */\r\n  public internalBlocked = false;\r\n  /** @deprecated */\r\n  public get viewBlocked(): boolean | null {\r\n    return this.internalBlocked || this.blocked;\r\n  }\r\n\r\n  /** @deprecated */\r\n  public hasLoadError = false;\r\n  /** @deprecated */\r\n  public hasSaveError = false;\r\n  /** @deprecated */\r\n  public errorMessage: string;\r\n  /** @deprecated */\r\n  public get canSaveIntern(): boolean | null {\r\n    return this.viewBlocked ? false : this.canSave;\r\n  }\r\n  /** @deprecated */\r\n  public intl: IPsFormIntlTexts;\r\n  public dummyForm = new FormGroup({});\r\n\r\n  private ngUnsubscribe$ = new Subject<void>();\r\n  private _saveAndCloseSub: Subscription;\r\n  private _saveSub: Subscription;\r\n  private _loadSub: Subscription;\r\n  private _savebar: PsSavebarComponent;\r\n  private _dataSourceSub = Subscription.EMPTY;\r\n\r\n  constructor(\r\n    @Optional() public actionService: PsFormActionService,\r\n    public intlService: PsIntlService,\r\n    private errorExtractor: PsExceptionMessageExtractor,\r\n    @Optional() private route: ActivatedRoute,\r\n    private cd: ChangeDetectorRef\r\n  ) {}\r\n\r\n  public ngOnInit() {\r\n    this.intlService.intlChanged$\r\n      .pipe(\r\n        startWith(null as any),\r\n        takeUntil(this.ngUnsubscribe$)\r\n      )\r\n      .subscribe(() => {\r\n        this.updateIntl();\r\n        this.cd.markForCheck();\r\n      });\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.intlOverride) {\r\n      this.updateIntl();\r\n    }\r\n\r\n    if (changes.loadFnc) {\r\n      this.loadData();\r\n    }\r\n\r\n    if (changes.dataSource) {\r\n      this.hideSave = true;\r\n      this.hideSaveAndClose = true;\r\n    }\r\n\r\n    if (this._savebar) {\r\n      if (changes.hideSave) {\r\n        this.updateSaveBinding();\r\n      }\r\n      if (changes.hideSaveAndClose) {\r\n        this.updateSaveAndCloseBinding();\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.ngUnsubscribe$.next();\r\n    this.ngUnsubscribe$.complete();\r\n\r\n    if (this._loadSub) {\r\n      this._loadSub.unsubscribe();\r\n    }\r\n    if (this._saveSub) {\r\n      this._saveSub.unsubscribe();\r\n    }\r\n    if (this._saveAndCloseSub) {\r\n      this._saveAndCloseSub.unsubscribe();\r\n    }\r\n\r\n    this._dataSourceSub.unsubscribe();\r\n    if (this._dataSource) {\r\n      this._dataSource.disconnect();\r\n    }\r\n  }\r\n\r\n  /** @deprecated */\r\n  public loadData() {\r\n    this.internalBlocked = true;\r\n    this.errorMessage = null;\r\n    this.hasLoadError = false;\r\n    this.hasSaveError = false;\r\n    this.cd.markForCheck();\r\n\r\n    if (this._loadSub) {\r\n      this._loadSub.unsubscribe();\r\n    }\r\n    this._loadSub = this.loadFnc().subscribe({\r\n      next: (value: any) => {\r\n        this.internalBlocked = false;\r\n\r\n        const event = new PsFormLoadSuccessEvent(value);\r\n        this.loadSuccess.emit(event);\r\n        if (this.actionService && !event.defaultPrevented) {\r\n          this.actionService.defaultLoadSuccessHandler({\r\n            value: value,\r\n            form: this.form,\r\n            formMode: this.formMode,\r\n            route: this.route,\r\n          });\r\n        }\r\n\r\n        this.cd.markForCheck();\r\n      },\r\n      error: (error: any) => {\r\n        this.internalBlocked = false;\r\n        this.errorMessage = this.errorExtractor.extractErrorMessage(error);\r\n        this.hasLoadError = true;\r\n\r\n        const event = new PsFormLoadErrorEvent(error);\r\n        this.loadError.emit(event);\r\n        if (this.actionService && !event.defaultPrevented) {\r\n          this.actionService.defaultLoadErrorHandler({\r\n            error: error,\r\n            form: this.form,\r\n            formMode: this.formMode,\r\n            route: this.route,\r\n          });\r\n        }\r\n\r\n        this.cd.markForCheck();\r\n      },\r\n    });\r\n  }\r\n\r\n  /** @deprecated */\r\n  public onSave(close: boolean) {\r\n    this.internalBlocked = true;\r\n    this.errorMessage = null;\r\n    this.hasSaveError = false;\r\n    this.cd.markForCheck();\r\n\r\n    const formValue = (this.form && this.form.getRawValue()) || null;\r\n    const saveParams: IPsFormSaveParams = {\r\n      close: close,\r\n    };\r\n    this.saveFnc(formValue, saveParams)\r\n      .pipe(takeUntil(this.ngUnsubscribe$))\r\n      .subscribe({\r\n        next: (saveResult: any) => {\r\n          this.internalBlocked = false;\r\n\r\n          const event = new PsFormSaveSuccessEvent(formValue, saveResult, close);\r\n          this.saveSuccess.emit(event);\r\n          if (this.actionService && !event.defaultPrevented) {\r\n            this.actionService.defaultSaveSuccessHandler({\r\n              value: formValue,\r\n              saveResult: saveResult,\r\n              close: close,\r\n              form: this.form,\r\n              formMode: this.formMode,\r\n              route: this.route,\r\n            });\r\n          }\r\n\r\n          this.cd.markForCheck();\r\n        },\r\n        error: (error: any) => {\r\n          this.internalBlocked = false;\r\n          this.errorMessage = this.errorExtractor.extractErrorMessage(error);\r\n          this.hasSaveError = true;\r\n\r\n          const event = new PsFormSaveErrorEvent(formValue, error);\r\n          this.saveError.emit(event);\r\n          if (this.actionService && !event.defaultPrevented) {\r\n            this.actionService.defaultSaveErrorHandler({\r\n              value: formValue,\r\n              error: error,\r\n              close: close,\r\n              form: this.form,\r\n              formMode: this.formMode,\r\n              route: this.route,\r\n            });\r\n          }\r\n\r\n          this.cd.markForCheck();\r\n        },\r\n      });\r\n  }\r\n\r\n  /** @deprecated */\r\n  public onCancel() {\r\n    const event = new PsFormCancelEvent();\r\n    this.cancel.emit(event);\r\n    if (this.actionService && !event.defaultPrevented) {\r\n      this.actionService.defaultCancelHandler({\r\n        formMode: this.formMode,\r\n        route: this.route,\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateIntl() {\r\n    const intl = this.intlService.get('form');\r\n    this.intl = this.intlService.merge(intl, this.intlOverride);\r\n  }\r\n\r\n  private updateSaveBinding() {\r\n    if (this._saveSub) {\r\n      this._saveSub.unsubscribe();\r\n    }\r\n\r\n    if (!this.hideSave) {\r\n      this._saveSub = this._savebar.save.subscribe(() => this.onSave(false));\r\n    }\r\n    this._savebar.cd.markForCheck();\r\n  }\r\n\r\n  private updateSaveAndCloseBinding() {\r\n    if (this._saveAndCloseSub) {\r\n      this._saveAndCloseSub.unsubscribe();\r\n    }\r\n\r\n    if (!this.hideSaveAndClose) {\r\n      this._saveAndCloseSub = this._savebar.saveAndClose.subscribe(() => this.onSave(true));\r\n    }\r\n    this._savebar.cd.markForCheck();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PsBlockUiModule } from '@prosoft/components/block-ui';\r\nimport { PsSavebarModule } from '@prosoft/components/savebar';\r\nimport { PsFormComponent } from './form.component';\r\n\r\n@NgModule({\r\n  declarations: [PsFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n\r\n    PsBlockUiModule,\r\n    PsSavebarModule,\r\n  ],\r\n  exports: [PsFormComponent],\r\n})\r\nexport class PsFormModule {}\r\n","// export what ./public_api exports so we can import with the lib name like this:\r\n// import { ModuleA } from 'libname'\r\nexport * from './public_api';\r\n","export { PsSavebarRightContentDirective } from './src/savebar-right-content.directive';\nexport { PsSavebarComponent } from './src/savebar.component';\nexport { PsSavebarModule } from './src/savebar.module';\nexport { IPsSavebarMode } from './src/models';\n\n// reexport\nexport { IPsSavebarIntlTexts } from '@prosoft/components/core';\n","\n    <mat-card class=\"app-form-data-source-demo__settings\">\n      <mat-checkbox [(ngModel)]=\"loadError\">load error</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"saveError\">save error</mat-checkbox>\n      <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"reload()\">reload</button>\n    </mat-card>\n    <div class=\"app-form-data-source-demo__grid\">\n      <ps-form [dataSource]=\"dataSource\">\n        <mat-card>\n          <form [formGroup]=\"form\">\n            <mat-form-field>\n              <mat-label>Input 1</mat-label>\n              <input type=\"text\" matInput formControlName=\"input1\" />\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Input 2</mat-label>\n              <input type=\"text\" matInput formControlName=\"input2\" />\n            </mat-form-field>\n          </form>\n        </mat-card>\n        <ng-container psFormSavebarButtons>\n          <button mat-stroked-button type=\"button\">dummy button 1</button>\n          <button mat-stroked-button type=\"button\">dummy button 2</button>\n        </ng-container>\n      </ps-form>\n      <mat-card class=\"app-form-data-source-demo__logs\">\n        <div *ngFor=\"let log of logs\" class=\"app-form-data-source-demo__log-item\">{{ log | json }}</div>\n      </mat-card>\n    </div>\n  ","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\nimport { IPsFormButton, IPsFormDataSource, IPsFormException } from '@prosoft/components/form';\r\nimport { IPsSavebarMode } from '@prosoft/components/savebar';\r\nimport { BehaviorSubject, Observable, of, Subject, Subscription } from 'rxjs';\r\nimport { delay, map, take, tap } from 'rxjs/operators';\r\n\r\nexport interface PsFormDataSourceOptions<TParams, TData> {\r\n  form: FormGroup;\r\n  loadTrigger$: Observable<TParams>;\r\n  loadFn: (params: TParams) => Observable<TData>;\r\n  saveFn: (data: TData, params: TParams) => Observable<void>;\r\n}\r\n\r\nclass DemoPsFormDataSource<TParams, TData> implements IPsFormDataSource {\r\n  public get form(): FormGroup {\r\n    return this.options.form;\r\n  }\r\n  public buttons: IPsFormButton[] = [];\r\n  public get contentVisible(): boolean {\r\n    return !this._hasLoadError;\r\n  }\r\n  public get contentBlocked(): boolean {\r\n    return this._loading || this._saving || this._blockView;\r\n  }\r\n  public exception: IPsFormException;\r\n  public get savebarMode(): IPsSavebarMode {\r\n    return this._hasLoadError ? 'hide' : 'auto';\r\n  }\r\n\r\n  private _originalData: TData = null;\r\n  private _loading = false;\r\n  private _hasLoadError = false;\r\n  private _saving = false;\r\n  private _blockView = false;\r\n  private _isEditMode = false;\r\n  private stateChanges$ = new Subject<void>();\r\n  private _loadParams: TParams = null;\r\n\r\n  private buttonDefs: { [key: string]: IPsFormButton } = {\r\n    edit: { label: 'bearbeiten', type: 'raised', color: 'primary', disabled: () => this.contentBlocked, click: () => this.edit() },\r\n    save: {\r\n      label: 'speichern',\r\n      type: 'raised',\r\n      color: 'primary',\r\n      disabled: () => this.contentBlocked || !this.form.valid,\r\n      click: () => this.save(),\r\n    },\r\n    cancel: { label: 'cancel', type: 'stroked', color: null, disabled: () => false, click: () => this.reset() },\r\n  };\r\n\r\n  private _loadingSub = Subscription.EMPTY;\r\n  private _connectSub = Subscription.EMPTY;\r\n  constructor(private options: PsFormDataSourceOptions<TParams, TData>) {}\r\n\r\n  public connect(): Observable<void> {\r\n    this._connectSub = this.options.loadTrigger$.subscribe(params => {\r\n      this._loadParams = params;\r\n      this.loadData(params);\r\n    });\r\n    return this.stateChanges$;\r\n  }\r\n\r\n  public disconnect(): void {\r\n    this._connectSub.unsubscribe();\r\n  }\r\n\r\n  public setViewBlocked(value: boolean) {\r\n    this._blockView = value;\r\n    this.stateChanges$.next();\r\n  }\r\n\r\n  public edit(): void {\r\n    this.setEditMode(true);\r\n  }\r\n\r\n  public save(): void {\r\n    this._saving = true;\r\n    this.exception = null;\r\n    this.stateChanges$.next();\r\n\r\n    const formValue: TData = this.form.getRawValue();\r\n    this.options\r\n      .saveFn(formValue, this._loadParams)\r\n      .pipe(take(1))\r\n      .subscribe({\r\n        next: data => {\r\n          this.markDataSaved();\r\n          this.setEditMode(false);\r\n          this._saving = false;\r\n          this.stateChanges$.next();\r\n        },\r\n        error: err => {\r\n          this._saving = false;\r\n          this.exception = {\r\n            errorObject: err,\r\n          };\r\n          this.stateChanges$.next();\r\n        },\r\n      });\r\n  }\r\n\r\n  public reset(): void {\r\n    this.resetData();\r\n    this.setEditMode(false);\r\n    this.stateChanges$.next();\r\n  }\r\n\r\n  private loadData(params: TParams) {\r\n    this._loadingSub.unsubscribe();\r\n    this._loading = true;\r\n    this._hasLoadError = false;\r\n    this.exception = null;\r\n    this.initializeData(null);\r\n    this.setEditMode(false);\r\n    this.stateChanges$.next();\r\n\r\n    this._loadingSub = this.options\r\n      .loadFn(params)\r\n      .pipe(take(1))\r\n      .subscribe({\r\n        next: data => {\r\n          this.initializeData(data);\r\n          this._loading = false;\r\n          this.stateChanges$.next();\r\n        },\r\n        error: err => {\r\n          this._loading = false;\r\n          this._hasLoadError = true;\r\n          this.exception = {\r\n            errorObject: err,\r\n            alignCenter: true,\r\n            icon: 'sentiment_very_dissatisfied',\r\n          };\r\n          this.stateChanges$.next();\r\n        },\r\n      });\r\n  }\r\n\r\n  private initializeData(data: TData) {\r\n    if (data == null) {\r\n      this.form.reset();\r\n    } else {\r\n      this.form.patchValue(data);\r\n    }\r\n    this.markDataSaved();\r\n  }\r\n\r\n  private markDataSaved() {\r\n    this._originalData = this.form.getRawValue();\r\n    this.form.markAsPristine();\r\n    this.form.markAsUntouched();\r\n  }\r\n\r\n  private resetData() {\r\n    this.form.patchValue(this._originalData);\r\n    this.form.markAsPristine();\r\n    this.form.markAsUntouched();\r\n  }\r\n\r\n  private setEditMode(value: boolean) {\r\n    this._isEditMode = value;\r\n    if (value) {\r\n      this.form.enable();\r\n    } else {\r\n      this.form.disable();\r\n    }\r\n    this.updateButtons();\r\n  }\r\n\r\n  private updateButtons() {\r\n    this.buttons = [];\r\n    if (this.contentVisible) {\r\n      if (!this._isEditMode) {\r\n        this.buttons.push(this.buttonDefs.edit);\r\n      } else {\r\n        this.buttons.push(this.buttonDefs.save);\r\n        this.buttons.push(this.buttonDefs.cancel);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-form-data-source-demo',\r\n  template: `\r\n    <mat-card class=\"app-form-data-source-demo__settings\">\r\n      <mat-checkbox [(ngModel)]=\"loadError\">load error</mat-checkbox>\r\n      <mat-checkbox [(ngModel)]=\"saveError\">save error</mat-checkbox>\r\n      <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"reload()\">reload</button>\r\n    </mat-card>\r\n    <div class=\"app-form-data-source-demo__grid\">\r\n      <ps-form [dataSource]=\"dataSource\">\r\n        <mat-card>\r\n          <form [formGroup]=\"form\">\r\n            <mat-form-field>\r\n              <mat-label>Input 1</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"input1\" />\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n              <mat-label>Input 2</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"input2\" />\r\n            </mat-form-field>\r\n          </form>\r\n        </mat-card>\r\n        <ng-container psFormSavebarButtons>\r\n          <button mat-stroked-button type=\"button\">dummy button 1</button>\r\n          <button mat-stroked-button type=\"button\">dummy button 2</button>\r\n        </ng-container>\r\n      </ps-form>\r\n      <mat-card class=\"app-form-data-source-demo__logs\">\r\n        <div *ngFor=\"let log of logs\" class=\"app-form-data-source-demo__log-item\">{{ log | json }}</div>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .app-form-data-source-demo__settings {\r\n        margin-bottom: 1em;\r\n      }\r\n\r\n      .app-form-data-source-demo__settings mat-checkbox {\r\n        margin: 1em;\r\n      }\r\n\r\n      .app-form-data-source-demo__grid {\r\n        display: grid;\r\n        grid-template-columns: 2fr 1fr;\r\n        grid-gap: 1em;\r\n      }\r\n\r\n      .app-form-data-source-demo__log-item {\r\n        margin-bottom: 0.25em;\r\n        padding-bottom: 0.25em;\r\n        border-bottom: 1px solid #ccc;\r\n        font-size: 0.95em;\r\n      }\r\n\r\n      app-form-demo .mat-form-field {\r\n        display: block;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class FormDataSourceDemoComponent {\r\n  public loadError = false;\r\n  public saveError = false;\r\n\r\n  public form = new FormGroup(\r\n    {\r\n      input1: new FormControl('a'),\r\n      input2: new FormControl('b'),\r\n    },\r\n    [\r\n      (formGroup: AbstractControl) => {\r\n        return formGroup.value.input1 === formGroup.value.input2 ? null : { equal: 'input1 and input2 must be equal' };\r\n      },\r\n    ]\r\n  );\r\n  public counter = 0;\r\n  public loadTrigger$ = new BehaviorSubject(this.counter);\r\n  public logs: any[] = [];\r\n  public dataSource = new DemoPsFormDataSource({\r\n    form: this.form,\r\n    loadTrigger$: this.loadTrigger$, // could be route params in a real application\r\n    loadFn: count => {\r\n      this.logs.push({ type: 'load', params: count });\r\n      return of({\r\n        input1: 'input 1 load count ' + count,\r\n        input2: 'input 2 load count ' + count,\r\n      }).pipe(\r\n        delay(1000),\r\n        map(x => {\r\n          if (this.loadError) {\r\n            throw new Error('this is the server error (loading)');\r\n          }\r\n\r\n          return x;\r\n        })\r\n      );\r\n    },\r\n    saveFn: (data, count) => {\r\n      this.logs.push({ type: 'save', data: data, params: count });\r\n      return of(null).pipe(\r\n        delay(1000),\r\n        tap(x => {\r\n          if (this.saveError) {\r\n            throw new Error('this is the server error (saving)');\r\n          }\r\n\r\n          return x;\r\n        })\r\n      );\r\n    },\r\n  });\r\n\r\n  public reload() {\r\n    this.loadTrigger$.next(++this.counter);\r\n  }\r\n}\r\n","\n    <mat-card class=\"app-form-demo__settings\">\n      <mat-form-field>\n        <mat-select [(ngModel)]=\"demoType\">\n          <mat-option [value]=\"'dataSource'\">dataSource</mat-option>\n          <mat-option [value]=\"'inputs'\">inputs (deprecated)</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </mat-card>\n    <ng-container [ngSwitch]=\"demoType\">\n      <app-form-data-source-demo *ngSwitchCase=\"'dataSource'\"></app-form-data-source-demo>\n      <app-form-inputs-demo *ngSwitchCase=\"'inputs'\"></app-form-inputs-demo>\n    </ng-container>\n  ","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-demo',\r\n  template: `\r\n    <mat-card class=\"app-form-demo__settings\">\r\n      <mat-form-field>\r\n        <mat-select [(ngModel)]=\"demoType\">\r\n          <mat-option [value]=\"'dataSource'\">dataSource</mat-option>\r\n          <mat-option [value]=\"'inputs'\">inputs (deprecated)</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </mat-card>\r\n    <ng-container [ngSwitch]=\"demoType\">\r\n      <app-form-data-source-demo *ngSwitchCase=\"'dataSource'\"></app-form-data-source-demo>\r\n      <app-form-inputs-demo *ngSwitchCase=\"'inputs'\"></app-form-inputs-demo>\r\n    </ng-container>\r\n  `,\r\n  styles: [\r\n    `\r\n      .app-form-demo__settings {\r\n        margin-bottom: 1em;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormDemoComponent {\r\n  public demoType = 'dataSource';\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IPsFormCancelParams, PsFormActionService, PsFormModule } from '@prosoft/components/form';\r\nimport { BasePsFormService, IPsFormError, IPsFormErrorData, PsFormBaseModule } from '@prosoft/components/form-base';\r\nimport {\r\n  IPsFormLoadErrorParams,\r\n  IPsFormLoadSuccessParams,\r\n  IPsFormSaveErrorParams,\r\n  IPsFormSaveSuccessParams,\r\n} from '@prosoft/components/form/src/models';\r\nimport { PsSavebarModule } from '@prosoft/components/savebar';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { FormDataSourceDemoComponent } from './form-data-source-demo.component';\r\nimport { FormDemoComponent } from './form-demo.component';\r\nimport { FormInputsDemoComponent } from './form-inputs-demo.component';\r\n\r\nexport class DemoPsFormsService extends BasePsFormService {\r\n  public getLabel(formControl: any): Observable<string> {\r\n    return formControl.psLabel ? of(formControl.psLabel) : null;\r\n  }\r\n  protected mapDataToError(errorData: IPsFormErrorData[]): Observable<IPsFormError[]> {\r\n    return of(\r\n      errorData.map(data => ({\r\n        errorText: `${data.controlPath} - ${data.errorKey} - ${JSON.stringify(data.errorValue)}`,\r\n        data: data,\r\n      }))\r\n    );\r\n  }\r\n}\r\n\r\nexport class DemoPsFormActionService extends PsFormActionService {\r\n  public static logStream$ = new Subject<string>();\r\n  public defaultLoadSuccessHandler(params: IPsFormLoadSuccessParams): void {\r\n    this.log('action service load success handler', params);\r\n  }\r\n  public defaultLoadErrorHandler(params: IPsFormLoadErrorParams): void {\r\n    this.log('action service load error handler', params);\r\n  }\r\n  public defaultSaveSuccessHandler(params: IPsFormSaveSuccessParams): void {\r\n    this.log('action service save success handler', params);\r\n  }\r\n  public defaultSaveErrorHandler(params: IPsFormSaveErrorParams): void {\r\n    this.log('action service save error handler', params);\r\n  }\r\n  public defaultCancelHandler(params: IPsFormCancelParams): void {\r\n    this.log('action service cancel handler', params);\r\n  }\r\n\r\n  private log(message: string, params: any) {\r\n    console.log(message, params);\r\n    DemoPsFormActionService.logStream$.next(message);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    PsFormBaseModule.forRoot(DemoPsFormsService),\r\n    PsSavebarModule,\r\n    PsFormModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: FormDemoComponent,\r\n      },\r\n    ]),\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n  ],\r\n  declarations: [FormDemoComponent, FormInputsDemoComponent, FormDataSourceDemoComponent],\r\n  providers: [{ provide: PsFormActionService, useClass: DemoPsFormActionService }],\r\n})\r\nexport class FormDemoModule {}\r\n","\n    <mat-card class=\"app-form-inputs-demo__settings\">\n      <mat-checkbox [(ngModel)]=\"blocked\">blocked</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"hideSave\">hide save</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"hideSaveAndClose\">hide save & close</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"canSave\">can save</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"preventDefault\">prevent service events</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"loadError\">load error</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"saveError\">save error</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"setForm\">set formGroup</mat-checkbox>\n      <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"reload()\">reload</button>\n    </mat-card>\n    <div class=\"app-form-inputs-demo__grid\">\n      <ps-form\n        [form]=\"setForm ? form : null\"\n        [formMode]=\"formMode\"\n        [loadFnc]=\"loadFnc\"\n        [saveFnc]=\"saveFnc\"\n        [hideSave]=\"hideSave\"\n        [hideSaveAndClose]=\"hideSaveAndClose\"\n        [canSave]=\"canSave\"\n        [blocked]=\"blocked\"\n        (loadSuccess)=\"onEvent($event, 'loadSuccess')\"\n        (loadError)=\"onEvent($event, 'loadError')\"\n        (saveSuccess)=\"onEvent($event, 'saveSuccess')\"\n        (saveError)=\"onEvent($event, 'saveError')\"\n        (cancel)=\"onEvent($event, 'cancel')\"\n      >\n        <mat-card>\n          <form [formGroup]=\"form\">\n            <mat-form-field>\n              <mat-label>Input 1</mat-label>\n              <input type=\"text\" matInput formControlName=\"input1\" />\n            </mat-form-field>\n            <mat-form-field>\n              <mat-label>Input 2</mat-label>\n              <input type=\"text\" matInput formControlName=\"input2\" />\n            </mat-form-field>\n          </form>\n        </mat-card>\n      </ps-form>\n      <mat-card class=\"app-form-inputs-demo__logs\">\n        <div *ngFor=\"let log of logs\" class=\"app-form-inputs-demo__log-item\">{{ log }}</div>\n      </mat-card>\n    </div>\n  ","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\nimport { IPsFormSaveParams } from '@prosoft/components/form';\r\nimport { PsFormEvent, PsFormComponent } from '@prosoft/components/form';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { delay, tap, map } from 'rxjs/operators';\r\nimport { DemoPsFormActionService } from './form-demo.module';\r\n\r\n@Component({\r\n  selector: 'app-form-inputs-demo',\r\n  template: `\r\n    <mat-card class=\"app-form-inputs-demo__settings\">\r\n      <mat-checkbox [(ngModel)]=\"blocked\">blocked</mat-checkbox>\r\n      <mat-checkbox [(ngModel)]=\"hideSave\">hide save</mat-checkbox>\r\n      <mat-checkbox [(ngModel)]=\"hideSaveAndClose\">hide save & close</mat-checkbox>\r\n      <mat-checkbox [(ngModel)]=\"canSave\">can save</mat-checkbox>\r\n      <mat-checkbox [(ngModel)]=\"preventDefault\">prevent service events</mat-checkbox>\r\n      <mat-checkbox [(ngModel)]=\"loadError\">load error</mat-checkbox>\r\n      <mat-checkbox [(ngModel)]=\"saveError\">save error</mat-checkbox>\r\n      <mat-checkbox [(ngModel)]=\"setForm\">set formGroup</mat-checkbox>\r\n      <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"reload()\">reload</button>\r\n    </mat-card>\r\n    <div class=\"app-form-inputs-demo__grid\">\r\n      <ps-form\r\n        [form]=\"setForm ? form : null\"\r\n        [formMode]=\"formMode\"\r\n        [loadFnc]=\"loadFnc\"\r\n        [saveFnc]=\"saveFnc\"\r\n        [hideSave]=\"hideSave\"\r\n        [hideSaveAndClose]=\"hideSaveAndClose\"\r\n        [canSave]=\"canSave\"\r\n        [blocked]=\"blocked\"\r\n        (loadSuccess)=\"onEvent($event, 'loadSuccess')\"\r\n        (loadError)=\"onEvent($event, 'loadError')\"\r\n        (saveSuccess)=\"onEvent($event, 'saveSuccess')\"\r\n        (saveError)=\"onEvent($event, 'saveError')\"\r\n        (cancel)=\"onEvent($event, 'cancel')\"\r\n      >\r\n        <mat-card>\r\n          <form [formGroup]=\"form\">\r\n            <mat-form-field>\r\n              <mat-label>Input 1</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"input1\" />\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n              <mat-label>Input 2</mat-label>\r\n              <input type=\"text\" matInput formControlName=\"input2\" />\r\n            </mat-form-field>\r\n          </form>\r\n        </mat-card>\r\n      </ps-form>\r\n      <mat-card class=\"app-form-inputs-demo__logs\">\r\n        <div *ngFor=\"let log of logs\" class=\"app-form-inputs-demo__log-item\">{{ log }}</div>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .app-form-inputs-demo__settings {\r\n        margin-bottom: 1em;\r\n      }\r\n\r\n      .app-form-inputs-demo__settings mat-checkbox {\r\n        margin: 1em;\r\n      }\r\n\r\n      .app-form-inputs-demo__grid {\r\n        display: grid;\r\n        grid-template-columns: 2fr 1fr;\r\n        grid-gap: 1em;\r\n      }\r\n\r\n      .app-form-inputs-demo__log-item {\r\n        margin-bottom: 0.25em;\r\n        padding-bottom: 0.25em;\r\n        border-bottom: 1px solid #ccc;\r\n        font-size: 0.95em;\r\n      }\r\n\r\n      app-form-demo .mat-form-field {\r\n        display: block;\r\n      }\r\n    `,\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class FormInputsDemoComponent implements OnDestroy {\r\n  public preventDefault = false;\r\n  public blocked = false;\r\n  public canSave = true;\r\n  public hideSave = false;\r\n  public hideSaveAndClose = false;\r\n  public saveError = false;\r\n  public loadError = false;\r\n  public setForm = true;\r\n  public formMode = 'create';\r\n  public form = new FormGroup(\r\n    {\r\n      input1: new FormControl('a'),\r\n      input2: new FormControl('b'),\r\n    },\r\n    [\r\n      (formGroup: AbstractControl) => {\r\n        return formGroup.value.input1 === formGroup.value.input2 ? null : { equal: 'input1 and input2 must be equal' };\r\n      },\r\n    ]\r\n  );\r\n\r\n  public logs: string[] = [];\r\n  public serviceLogsSubscription: Subscription;\r\n\r\n  @ViewChild(PsFormComponent, { static: true }) formCmp: PsFormComponent;\r\n\r\n  constructor(private cd: ChangeDetectorRef) {\r\n    this.serviceLogsSubscription = DemoPsFormActionService.logStream$.subscribe(log => {\r\n      this.logs.push(log);\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.serviceLogsSubscription.unsubscribe();\r\n  }\r\n\r\n  public loadFnc = () => {\r\n    this.logs.push(`load`);\r\n    return of({ input1: 'a', input2: 'b' }).pipe(\r\n      delay(1000),\r\n      map(x => {\r\n        if (this.loadError) {\r\n          throw new Error('this is the server error (loading)');\r\n        }\r\n\r\n        return x;\r\n      })\r\n    );\r\n  };\r\n\r\n  public saveFnc = (value: any, params: IPsFormSaveParams) => {\r\n    this.logs.push(`save (value: ${JSON.stringify(value)}, close: ${params.close})`);\r\n    return of({ input1: 'a', input2: 'b' }).pipe(\r\n      delay(1000),\r\n      tap(x => {\r\n        if (this.saveError) {\r\n          throw new Error('this is the server error (saving)');\r\n        }\r\n\r\n        return x;\r\n      })\r\n    );\r\n  };\r\n\r\n  public onEvent(event: PsFormEvent, eventName: string) {\r\n    if (this.preventDefault) {\r\n      event.preventDefault();\r\n    }\r\n    this.logs.push(`${eventName} event: ${JSON.stringify(event)}`);\r\n  }\r\n\r\n  public reload() {\r\n    this.formCmp.loadData();\r\n  }\r\n}\r\n"],"sourceRoot":""}